"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.i18nLocaleMapper = void 0;
// Copyright Â© 2023 Lenovo. All rights reserved.
// Confidential and Restricted
const config_1 = require("../configs/config");
/**
 * Based on Electron locale returns language code.
 * @param locale pass locale received from electron's app.getLocale() API or language code.
 * @returns return language code in lowercase string.
 */
const i18nLocaleMapper = (locale) => {
    if (locale) {
        const localeLower = locale.trim().toLowerCase();
        // electron returns possible values using Chromium's l10n_util library
        // https://source.chromium.org/chromium/chromium/src/+/master:ui/base/l10n/l10n_util.cc
        if (localeLower.startsWith('de'))
            return 'de'; //german
        if (localeLower.startsWith('en'))
            return 'en'; //english
        if (localeLower.startsWith('es'))
            return 'es'; //spanish
        if (localeLower.startsWith('fr'))
            return 'fr'; //French
        if (localeLower.startsWith('it'))
            return 'it'; //Italian
        if (localeLower.startsWith('pt'))
            return 'pt'; //Portuguese
        if (!config_1.i18nCommonConfig.languages.includes(locale))
            return config_1.i18nCommonConfig.fallbackLng;
        // there is no variant for languages like id (Indonesian), ja (Japanese) and ko (Korean), return as is in lower case.
        return localeLower;
    }
    throw Error('locale cannot be undefined!');
};
exports.i18nLocaleMapper = i18nLocaleMapper;
//# sourceMappingURL=locale.mapper.js.map