"use strict";
// Copyright Â© 2023 Lenovo. All rights reserved.
// Confidential and Restricted
Object.defineProperty(exports, "__esModule", { value: true });
exports.PollingTask = void 0;
class PollingTask {
    constructor() {
        this.pollerId = -1;
        this.headStartTimeoutId = -1;
        this.inHeadstart = false;
        this.callbackBinding = undefined;
    }
    _handleHeadStart(callback, interval, headStart) {
        if (headStart &&
            interval > headStart) {
            this.inHeadstart = true;
            this.headStartTimeoutId = setTimeout(function () {
                this.headStartTimeoutId = -1;
                callback();
                this.stopTask(); // Throw away any task that started during the timeout
                this.pollerId = setInterval(function () {
                    this.inHeadstart = false;
                    callback();
                }.bind(this), interval);
            }.bind(this), interval - headStart);
            return true;
        }
        return false;
    }
    setCallbackBinding(param) {
        this.callbackBinding = param;
    }
    startTask(callback, interval, headStart) {
        this.stopTask();
        callback(); // Run it now
        if (!this._handleHeadStart(callback, interval, headStart)) {
            this.pollerId = setInterval(callback, interval);
        }
    }
    _clearPollerId() {
        if (this.isTaskRunning()) {
            if (this.pollerId !== -1)
                clearInterval(this.pollerId);
        }
        this.pollerId = -1;
    }
    _clearTimeoutId() {
        if (this.headStartTimeoutId !== -1) {
            clearTimeout(this.headStartTimeoutId);
        }
        this.headStartTimeoutId = -1;
    }
    stopTask() {
        this._clearPollerId();
        this._clearTimeoutId();
    }
    isTaskRunning() {
        return (this.pollerId !== -1 || this.inHeadstart);
    }
}
exports.PollingTask = PollingTask;
if (typeof exports !== 'undefined') {
    exports.PollingTask = PollingTask;
}
//# sourceMappingURL=pollingTask.js.map