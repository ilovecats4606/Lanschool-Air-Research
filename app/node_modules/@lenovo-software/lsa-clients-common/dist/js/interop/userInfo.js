"use strict";
// Copyright Â© 2023 Lenovo. All rights reserved.
// Confidential and Restricted
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserInfoRetriever = void 0;
const internal_1 = require("../../internal");
class UserInfoRetriever {
    static getDeviceID() {
        let deviceId = internal_1.LSAClient.getInstance().clientParams.deviceId;
        if (deviceId && deviceId.length > 0) {
            return deviceId;
        }
        const provisioningData = internal_1.LSAClient.getInstance().storage.loadProvisioningData();
        if (provisioningData && provisioningData.deviceId) {
            return provisioningData.deviceId;
        }
        const osString = internal_1.LSAClient.getInstance().storage.loadOsString();
        if (osString.includes('Chrome') || osString.includes('CrOS')) {
            return internal_1.LSAClient.getInstance().clientParams.deviceName + '_ID';
        }
        return internal_1.LSAClient.getInstance().clientParams.deviceId;
    }
    static getEmailAddr() {
        return internal_1.LSAClient.getInstance().clientParams.emailAddr;
    }
    static getOsType() {
        return internal_1.LSAClient.getInstance().clientParams.osType;
    }
    static getDeviceType() {
        return internal_1.LSAClient.getInstance().clientParams.deviceType;
    }
    static getDeviceName() {
        return internal_1.LSAClient.getInstance().clientParams.deviceName;
    }
    static getOsTypeForProvisioning() {
        return internal_1.LSAClient.getInstance().clientParams.osTypeForProvisioning;
    }
}
exports.UserInfoRetriever = UserInfoRetriever;
//# sourceMappingURL=userInfo.js.map