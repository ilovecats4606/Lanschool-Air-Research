"use strict";
// Copyright Â© 2023 Lenovo. All rights reserved.
// Confidential and Restricted
Object.defineProperty(exports, "__esModule", { value: true });
exports.CallbackQueue = void 0;
// For lsa-common-client
const internal_1 = require("../internal");
const logger = new internal_1.LoggerInterop();
/* eslint-disable no-unused-vars */
/* eslint-disable no-undef */
class CallbackQueue {
    constructor() {
        this.cmdQueue = [];
    }
    queueCommand(f) {
        logger.logMessage("CallbackQueue.queueCommand(+)");
        this.cmdQueue.push(f);
    }
    executeQueuedCommand() {
        let executed = false;
        logger.logMessage("CallbackQueue.executeQueuedCommand(+)");
        if (this.cmdQueue.length > 0) {
            for (let i = 0; i < this.cmdQueue.length; i++) {
                logger.logMessage("CallbackQueue.executeQueuedCommand(): Executing next command.");
                if (this.cmdQueue[i]) {
                    let f = this.cmdQueue[i];
                    this.cmdQueue.splice(i, 1);
                    f();
                    executed = true;
                    break;
                }
            }
        }
        else {
            logger.logMessage("CallbackQueue.executeQueuedCommand(): No commands to execute.");
        }
        return executed;
    }
    clearQueue() {
        logger.logMessage("CallbackQueue.clearQueue(+)");
        this.cmdQueue = [];
    }
}
exports.CallbackQueue = CallbackQueue;
//# sourceMappingURL=cbq.js.map