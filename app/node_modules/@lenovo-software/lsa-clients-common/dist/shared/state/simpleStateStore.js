"use strict";
// Copyright Â© 2024 Lenovo. All rights reserved.
// Confidential and Restricted
Object.defineProperty(exports, "__esModule", { value: true });
exports.store = void 0;
const initialState = {
    webExtension: {
        isConnected: false
    },
    captureMode: 'Active Tab',
    intelliTaskSpecialSites: []
};
function reducer(state = initialState, action) {
    var _a, _b;
    switch (action.type) {
        case 'ExtensionConnected':
            return Object.assign(Object.assign({}, state), { webExtension: Object.assign(Object.assign({}, state.webExtension), { isConnected: action.payload }) });
        case 'CaptureMode':
            return Object.assign(Object.assign({}, state), { captureMode: (_a = action.payload) !== null && _a !== void 0 ? _a : 'Active Tab' });
        case 'IntelliTaskSpecialSites':
            return Object.assign(Object.assign({}, state), { intelliTaskSpecialSites: (_b = action.payload) !== null && _b !== void 0 ? _b : [] });
        default:
            return state;
    }
}
class SimpleStateStore {
    constructor(reducer, initialState) {
        this.state = Object.freeze(initialState);
        this.reducer = reducer;
    }
    getState() {
        return this.state;
    }
    dispatch(action) {
        this.state = Object.freeze(this.reducer(this.state, action));
    }
}
exports.store = new SimpleStateStore(reducer, initialState);
//# sourceMappingURL=simpleStateStore.js.map