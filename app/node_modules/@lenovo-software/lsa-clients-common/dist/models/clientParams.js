"use strict";
// Copyright Â© 2023 Lenovo. All rights reserved.
// Confidential and Restricted
Object.defineProperty(exports, "__esModule", { value: true });
exports.LSAClientParams = void 0;
const internal_1 = require("../internal");
class LSAClientParams {
    constructor(storage) {
        this.apiServer = '';
        this.hotProvisioningCode = '';
        this.provisioningCode = '';
        this.deviceName = '';
        this.emailAddr = '';
        this.deviceId = '';
        this.deviceType = '';
        this.osType = '';
        this.osTypeForProvisioning = '';
        this.apiServer = storage.loadAPIServer();
        if (!this.apiServer || this.apiServer.length === 0) {
            this.apiServer = new internal_1.DefaultStorage().loadAPIServer();
        }
        this.hotProvisioningCode = storage.loadHotProvisioningCode();
        this.provisioningCode = storage.loadProvisioningCode();
        if (!this.provisioningCode || (this.provisioningCode.length === 0 && this.hotProvisioningCode.length === 0)) {
            this.provisioningCode = new internal_1.DefaultStorage().loadProvisioningCode();
        }
        this.deviceName = storage.loadDeviceName();
        if (!this.deviceName || this.deviceName.length === 0) {
            this.deviceName = new internal_1.DefaultStorage().loadDeviceName();
        }
        this.emailAddr = storage.loadEmailAddr();
        this.deviceId = storage.loadDeviceId();
        this.deviceType = storage.loadDeviceType();
        this.osType = storage.loadOsString();
        try {
            if (storage.getOSTypeForProvisioning)
                this.osTypeForProvisioning = storage.getOSTypeForProvisioning();
        }
        catch (e) {
            internal_1.LSAClient.getInstance().logger.logError('LSAClientParams ctor exception: ' + e);
            this.osTypeForProvisioning = '';
        }
    }
    get apiServerForHTTPS() {
        let ret = this.apiServer;
        if (!ret.startsWith('https://')) {
            ret = 'https://' + ret;
        }
        if (!ret.endsWith('/')) {
            ret += '/';
        }
        return ret;
    }
}
exports.LSAClientParams = LSAClientParams;
//# sourceMappingURL=clientParams.js.map