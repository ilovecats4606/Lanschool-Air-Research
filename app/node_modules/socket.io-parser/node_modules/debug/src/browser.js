// Copyright (c) 2023 Lenovo. All rights reserved.
// Confidential and Restricted
//

exports = module.exports = require('./debug');

exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = () => { return false; }
exports.colors = [];

function truncate(s, maxLen) {
  if (s && s.length && s.length > maxLen) {
    let r = s.substr(0, maxLen);
    r += '...';
    return r;
  }

  return s;
}

exports.formatters.j = function (v) {
  try {
    return truncate(JSON.stringify(v), 100);
  } catch (err) {
    return '[UnexpectedJSONParseError]: ' + err.message;
  }
};

exports.formatters.s = function (s) {
  return truncate(s, 100);
}

exports.formatters.d = function (d) {
  return d;
}

function formatArgs(args) {
  args[0] = '!$$RB::SIO::['
    + this.namespace
    + '] '
    + args[0];
}

function log() {
  // this hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return 'object' === typeof console
    && console.log
    && Function.prototype.apply.call(console.log, console, arguments);
}

function save(namespaces) {
  try {
    if (null == namespaces) {
      exports.storage.removeItem('debug');
    } else {
      exports.storage.debug = namespaces;
    }
  } catch (e) { }
}

function load() {
  return '*';
}

exports.enable(load());
